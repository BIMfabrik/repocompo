version: "3.9"
services:
# Traefik HuB agent
  hub-agent:
    image: ghcr.io/traefik/hub-agent-traefik:latest
    container_name: hub-agent
    restart: unless-stopped
    command:
      - run
      - --hub.token=${TRAEF}
      - --auth-server.advertise-url=http://hub-agent
      - --traefik.host=traefik
      - --traefik.tls.insecure=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - traefik

# Start Traefik
  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      # Enable Hub communication (open the port 9900 and 9901 by default)
      - --experimental.hub=true
      - --hub.tls.insecure=true
      - --metrics.prometheus.addrouterslabels=true

#radarr : movies     
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /docker/radarr/config:/config
      - USB8TB:/movies
      - 256_DWNL:/downloads #optional
    ports:
      - 7878:7878
    restart: unless-stopped

#sonarr ...tv
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /docker/sonarr/config:/config
      - USB8TB:/tv
      - 256_DWNL:/downloads #optional
    ports:
      - 8989:8989
    restart: unless-stopped

#deluge donwloader
  deluge:
    image: lscr.io/linuxserver/deluge
    container_name: deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - /docker/deluge/config:/config
      - 256_DWNL:/downloads
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#      - TRANSMISSION_WEB_HOME= #optional
#      - USER=username #optional
#      - PASS=password #optional
#      - WHITELIST=iplist #optional
#      - PEERPORT=peerport #optional
#      - "HOST_WHITELIST=dnsname list" #optional
    volumes:
      - /docker/trasmission/config:/config
      - 256_DWNL:/downloads
# - /path/to/downloads:/downloads
#      - /path/to/watch/folder:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped

#lidarr s ongs
  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /docker/lidarr/config:/config
#     - osumterra:/music #optional
      - 256_DWNL:/downloads
    ports:
      - 8686:8686
    restart: unless-stopped

#readarr  Book Manager and Automation 
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /docker/readarr/config:/config
 #     - osumterra:/books
      - 256_DWNL:/downloads
    ports:
      - 8787:8787
    restart: unless-stopped 

#Prowlarr : indexer manager/proxy
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:develop
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /docker/prowlarr/config:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    
#homarr homepage f√ºr media    
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - /docker/configs:/app/data/configs
      - /docker/icons:/app/public/icons
    ports:
      - 7575:7575


#plex
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:      
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX}
    volumes:
      - /docker/plex/config:/config
      - USB8TB:/media
    ports:
      - "32400:32400" # (for access to the Plex Media Server) [required]
      - "3005:3005" # (for controlling Plex Home Theater via Plex Companion)
      - "8324:8324" # (for controlling Plex for Roku via Plex Companion)
      - "32410:32410/udp" # (for current GDM network discovery)
      - "32412:32412/udp" # (for current GDM network discovery)
      - "32413:32413/udp" # (for current GDM network discovery)
      - "32414:32414/udp" # (for current GDM network discovery)
      - "32469:32469" # (for access to the Plex DLNA Server)
    restart: unless-stopped
#jelly media alternative
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: 1000:1000
    network_mode: host
    volumes:
      - /docker/jellyfin/config:/config
      - /docker/jellyfin/cache:/cache
      - USB8TB:/media
#      - /path/to/media2:/media2:ro
    restart: unless-stopped
    # Optional - alternative address used for autodiscovery
#    environment:
#      - JELLYFIN_PublishedServerUrl=http://example.com
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - host.docker.internal:host-gateway

#overseerr request management 
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
      - PORT=5055 #optional
    ports:
      - 5055:5055
    volumes:
      - /docker/overseerr/config:/app/config
    restart: unless-stopped
    
#volumes
volumes:
  USB8TB:
    driver: local-persist
    driver_opts:
      mountpoint: /media/jin/1.44.1-426611/
  256_DWNL:
    driver: local-persist
    driver_opts:
      mountpoint: /media/jin/USB256SSD/_dwlds
